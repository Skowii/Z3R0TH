Iterating over nested iterables in JavaScript can be done using a generator function with recursion. In the given example, we use a generator function `flatIterator` that checks if each value of an iterable is an iterable itself. If it is, we recursively delegate to the same `flatIterator` function, yielding the values as we go. Otherwise, we simply yield the current value. By using `for...of` loop and the `Symbol.iterator`, we can effectively iterate over nested iterables in a flat manner.