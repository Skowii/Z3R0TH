El patrón Commander es una técnica en diseño distribuido que se utiliza para manejar transacciones complejas a través de varios componentes o servicios distribuidos, garantizando la consistencia e integridad de la transacción global. Se encapsula en comandos y lógica de coordinación, facilitando la implementación de protocolos de transacciones distribuidas como commit de dos fases o Saga.

En un ejemplo real, el patrón se aplica a un festival internacional de música donde actuaciones de grupos de todo el mundo están programadas. El organizador del festival coordina las transacciones individuales (llegada, prueba de sonido y actuación) para garantizar que el programa general funcione correctamente incluso con fallos individuales.

En un contexto de programación, el patrón Commander se utiliza en una plataforma de comercio electrónico con microservicios separados de Pago y Envío. Un componente Commander orquestará el proceso para manejar discrepancias como cuando un usuario realiza un pedido pero un servicio no está disponible mientras que otro lo está. El comandante intenta sincronizar el pedido con el servicio no disponible almacenando los detalles del pedido en una base de datos o poniéndolo en cola para su procesamiento futuro, garantizando la idempotencia y la integridad de la transacción.