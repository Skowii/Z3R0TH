In this article, the author describes their attempt to build a Brainfuck interpreter using an AST (Abstract Syntax Tree). The goal is to create an intermediate representation for better portability and readability. They plan to build something that resembles a virtual machine to ensure code can run in a controlled environment with added safety measures. In part 1, the author introduces Brainfuck as a Turing-complete Esolang and describes the memory representation using two arrays (left and right) and a pointer.