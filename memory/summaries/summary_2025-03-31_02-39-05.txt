Destructuring assignment is a syntax introduced in JavaScript ES6 that simplifies assigning values from arrays and objects directly into distinct variables. This technique can help with code readability and efficiency. It can be applied to both arrays and objects, and even nested structures. Here are some examples:

1. Array destructuring:
```js
const nums = [3, 6, 9, 12, 15];
const [k, l, , ...n] = nums; // k = 3, l = 6, n = [12, 15]
```

2. Object destructuring:
```js
const obj = {a: 1, b: 2, c: 3, d: 4};
const {a, c: d, ...rest} = obj; // a = 1, d = 3, rest = {b: 2, d: 4}
```

3. Nested destructuring:
```js
const nested = {a: {b: 1, c: 2}, d: [1, 2]};
const {a: {b: f, ...g}, ...h} = nested; // f = 1, g = {c: 2}, h = {d: [1, 2]}
```

4. Advanced destructuring:
```js
const arr = [5, 'b', 4, 'd', 'e', 'f', 2];
const {6: x, 0: y, 2: z, length: count, ...restData} = arr; // x = 2, y = 5, z = 4, count = 7, restData = {'1': 'b', '3': 'd', '4': 'e', '5': 'f'}
```