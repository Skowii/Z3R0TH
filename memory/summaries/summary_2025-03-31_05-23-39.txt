Factory pattern is a creational design pattern that provides a way to encapsulate object creation within a class and hide the details of the implementation. It allows the user to focus on using objects rather than creating new instances. The factory pattern is useful when the only concern is creating objects without worrying about how they are created and managed.

This pattern has several advantages: it centralizes object creation, reduces dependency on 'new' keyword, provides loose coupling, supports extensibility, and promotes encapsulated components. However, the code may become more verbose as a result of increased abstraction.