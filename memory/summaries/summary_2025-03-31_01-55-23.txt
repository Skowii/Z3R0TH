Merge sort is an efficient, general-purpose comparison-based sorting algorithm that uses a divide and conquer approach. It recursively breaks down an array into subarrays until each one consists of a single element, then merges those subarrays to create a sorted array. The algorithm has a time complexity of O(n log n). Here's the JavaScript implementation:

```js
const mergeSort = arr => {
  if (arr.length < 2) return arr;
  const mid = Math.floor(arr.length / 2);
  const l = mergeSort(arr.slice(0, mid));
  const r = mergeSort(arr.slice(mid, arr.length));
  return Array.from({ length: l.length + r.length }, () => {
    if (!l.length) return r.shift();
    else if (!r.length) return l.shift();
    else return l[0] > r[0] ? r.shift() : l.shift();
  });
};
mergeSort([5, 1, 4, 2, 3]); // [1, 2, 3, 4, 5]
```