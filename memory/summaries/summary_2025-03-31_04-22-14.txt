Iterator, also known as a cursor, is a behavioral design pattern that allows traversing the elements of an aggregate object in a sequence without exposing its underlying representation. It provides a way to access and traverse elements of a collection object without revealing its internal structure. This pattern is useful for scenarios where we want to access contents of an aggregation without exposing its inner workings, support multiple ways of traversal, or provide a unified interface to traverse different types of collections. In Java, some examples include the Iterator and Enumeration interfaces.