This JavaScript method demonstrates how to use Window.requestAnimationFrame() to run a callback on each animation frame. It leverages recursion and provides start and stop methods for controlling the recording of animation frames. The user can specify an optional autoStart argument to control when the recording begins. Here's the example:

```js
const recordAnimationFrames = (callback, autoStart = true) => {
    let running = false, raf;
    
    const stop = () => {
        if (!running) return;
        running = false;
        cancelAnimationFrame(raf);
    };
    
    const start = () => {
        if (running) return;
        running = true;
        run();
    };
    
    const run = () => {
        raf = requestAnimationFrame(() => {
            callback();
            if (running) run();
        });
    };
    
    if (autoStart) start();
    
    return { start, stop };
};
```

This can be used as follows:

```js
const cb = () => console.log('Animation frame fired');
const recorder = recordAnimationFrames(cb); // Logs 'Animation frame fired' on each animation frame
recorder.stop(); // Stops logging
recorder.start(); // Starts again

const recorder2 = recordAnimationFrames(cb, false); // `start` needs to be explicitly called to begin recording frames
```