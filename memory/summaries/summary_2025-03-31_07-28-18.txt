Decorator, también conocido como Wrapper, es un patrón de diseño estructural que permite agregar responsabilidades adicionales a un objeto de manera dinámica sin necesidad de crear una subclase. Se utiliza para extender la funcionalidad sin alterar el comportamiento de otros objetos. Este patrón es útil en relación con el Principio de Responsabilidad Única y el Principio Abierto-Cerrado, al permitir adherirse a estos principios al dividir la funcionalidad entre clases con áreas de interés específicas. Un ejemplo práctico en programación sería agregar un arma dinámicamente a un troll, manteniendo el comportamiento original y sumando un poder de ataque extra.