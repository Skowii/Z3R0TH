Components are used to implement various functionalities for agents, such as providing messages, executing code, or interacting with external services. They inherit from `AgentComponent` and can implement one or more protocols like `MessageProvider`, `CommandProvider`, and others. To add functionality to a component, you need to implement the required protocol. Components can be passed data via their `__init__` method, making them configurable using a pydantic model. For example, creating a "Hello World!" component requires implementing `MessageProvider`. The agent calls `get_messages()` each time it needs to build a new prompt, and the yielded messages are added accordingly.