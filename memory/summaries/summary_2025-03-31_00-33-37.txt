JavaScript iterators are a feature introduced in ES6 used to loop over sequences of values, typically collections. An iterator must implement a `next()` function that returns an object with the form `{value, done}`, where `value` is the next value in the iteration sequence and `done` indicates if the sequence has been consumed. Iterators can be used in various real-world projects for looping over values in custom data structures or existing iterable objects. They provide a way to define multiple iterators for the same object and can also be called like any other function, allowing delegation of iteration tasks.